[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "berkeley-scicomp"
description = "UC Berkeley Scientific Computing Framework"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Dr. Meshal Alawein", email = "meshal@berkeley.edu"}
]
maintainers = [
    {name = "Dr. Meshal Alawein", email = "meshal@berkeley.edu"}
]
keywords = [
    "scientific-computing",
    "quantum-physics", 
    "machine-learning",
    "physics-informed-neural-networks",
    "quantum-computing",
    "numerical-methods",
    "berkeley",
    "education",
    "research",
    "engineering",
    "mathematics",
    "visualization",
    "hpc"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education", 
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Natural Language :: English",
    "Environment :: Console"
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.24.0",
    "scipy>=1.10.0", 
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0"
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/berkeley-scicomp/SciComp"
Documentation = "https://berkeley-scicomp.readthedocs.io/"
Repository = "https://github.com/berkeley-scicomp/SciComp"
"Bug Tracker" = "https://github.com/berkeley-scicomp/SciComp/issues"
Changelog = "https://github.com/berkeley-scicomp/SciComp/blob/main/CHANGELOG.md"
"UC Berkeley" = "https://www.berkeley.edu/"
"Berkeley Physics" = "https://physics.berkeley.edu/"
"LBNL" = "https://www.lbl.gov/"

[project.optional-dependencies]
quantum = [
    "qiskit>=0.45.0",
    "cirq>=1.2.0",
    "pennylane>=0.32.0"
]
gpu = [
    "tensorflow-gpu>=2.13.0",
    "jax[cuda11_pip]>=0.4.0",
    "cupy-cuda11x>=12.0.0"
]
ml = [
    "tensorflow>=2.13.0",
    "tensorflow-probability>=0.20.0",
    "jax>=0.4.0",
    "jaxlib>=0.4.0",
    "flax>=0.7.0",
    "optax>=0.1.5"
]
hpc = [
    "mpi4py>=3.1.4",
    "petsc4py>=3.19.0",
    "slepc4py>=3.19.0"
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "black>=23.7.0",
    "isort>=5.12.0", 
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0"
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "jupyter-book>=0.15.0"
]
jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipywidgets>=8.0.0",
    "plotly>=5.15.0"
]
viz = [
    "plotly>=5.15.0",
    "bokeh>=3.2.0", 
    "holoviews>=1.17.0",
    "panel>=1.2.0"
]
data = [
    "pandas>=2.0.0",
    "xarray>=2023.6.0",
    "h5py>=3.9.0",
    "netcdf4>=1.6.4"
]
all = [
    "berkeley-scicomp[quantum,gpu,ml,hpc,viz,data]"
]

[project.scripts]
berkeley-scicomp = "Python.utils.cli:main"
berkeley-test = "tests.run_all_tests:main"  
berkeley-demo = "examples.run_demos:main"

[tool.setuptools]
packages = ["Python", "assets"]
include-package-data = true

[tool.setuptools.package-data]
Python = ["*.json", "*.yaml", "*.toml", "data/*.csv", "data/*.h5", "data/*.npy"]
assets = ["*.py", "*.m", "*.wl", "*.md", "*.mplstyle", "*.json"]

[tool.setuptools_scm]
version_scheme = "release-branch-semver"
local_scheme = "dirty-tag"

# =============================================================================
# Development Tools Configuration
# =============================================================================

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | docs/_build
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["Python", "assets"]
known_third_party = [
    "numpy", "scipy", "matplotlib", "seaborn",
    "tensorflow", "jax", "torch", "sklearn",
    "qiskit", "cirq", "pennylane"
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "docs/",
    "build/",
    "dist/",
    ".eggs/",
    "*.egg-info/",
    ".venv/",
    ".tox/"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "scipy.*", 
    "matplotlib.*",
    "seaborn.*",
    "tensorflow.*",
    "jax.*",
    "qiskit.*",
    "cirq.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=Python",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
testpaths = ["tests"]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU",
    "quantum: marks tests as requiring quantum computing libraries",
    "matlab: marks tests as requiring MATLAB",
    "mathematica: marks tests as requiring Mathematica",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks"
]

[tool.coverage.run]
source = ["Python"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "docs/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

# =============================================================================
# Berkeley SciComp Specific Configuration  
# =============================================================================

[tool.berkeley-scicomp]
# Framework-specific settings
berkeley_colors = true
watermark = true
institution = "University of California, Berkeley"
author = "Dr. Meshal Alawein"
default_dpi = 300
figure_format = "png"

# Platform support
platforms = ["python", "matlab", "mathematica"]
primary_platform = "python"

# Quality standards
min_test_coverage = 80
documentation_required = true
berkeley_styling_required = true

# Academic standards
peer_review_ready = true
publication_quality = true
educational_focus = true